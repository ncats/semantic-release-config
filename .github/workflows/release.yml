name: Release
on:
  push:
    branches:
      - master
jobs:
  release:
    name: Release
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # Semantic Release uses a separate Github Token for publishing
          # See: https://github.com/semantic-release/semantic-release/blob/master/docs/recipes/github-actions.md#pushing-packagejson-changes-to-a-master-branch
          persist-credentials: false

      - uses: mstachniuk/ci-skip@v1
        # Cancels the pipeline early if [ci skip] is detected in the commit header.
        # For example, changelog commits from the Semantic Release toolchain will generate a commit with the [ci skip] in the header.
        with:
          fail-fast: true

      - name: Configure CI Github User
        run: |
          git config --global user.name 'LabShare'
          git config --global user.email 'LabShare@labshare.org'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        # This step generates a local .npmrc file and adds the registry URL + :_authToken=${NODE_AUTH_TOKEN}
        # if the "registry-url" option is set. See: https://github.com/actions/setup-node/blob/c46424eee26de4078d34105d3de3cc4992202b1e/src/main.ts#L44
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org
          always-auth: true

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: npx semantic-release
